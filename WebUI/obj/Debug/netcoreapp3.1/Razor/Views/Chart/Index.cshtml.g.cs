#pragma checksum "C:\Users\user\source\repos\ExchangeRate\WebUI\Views\Chart\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a49070bc95b1ef53aac3aa189fcfd6fa05f60d3e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Chart_Index), @"mvc.1.0.view", @"/Views/Chart/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\user\source\repos\ExchangeRate\WebUI\Views\_ViewImports.cshtml"
using ExchangeRate;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a49070bc95b1ef53aac3aa189fcfd6fa05f60d3e", @"/Views/Chart/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a467b9d4f9f2a0af4bfae56dbed7bfc98d048623", @"/Views/_ViewImports.cshtml")]
    public class Views_Chart_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<script type=""text/javascript"" src=""https://www.gstatic.com/charts/loader.js"" ></script>

<div id=""chartDiv"" style=""width: 1000px; height: 600px;"" class=""align-content-center "">
    
</div>

<script type=""text/javascript"">

      google.charts.load('current', { packages: ['line'] });  
    google.charts.setOnLoadCallback(LoadData); 

    function LoadData()
    {
        $.ajax({
            url: 'ChartData',
            dataType: ""json"",
            type: ""POST"",

            success: function (data) {
                DrawChart(data);
                return false;
            }
        });
        return false;
    }

    function DrawChart(data)
    {
        var dataArray = [['Date', 'Open', 'High', 'Low', 'Close']];

        $.each(data, function (i, item)
        {
            dataArray.push([item.date, item.open, item.high, item.low, item.close]);
        });

        var data = google.visualization.arrayToDataTable(dataArray);


        var options =
        {
            title: 'Currency',
           ");
            WriteLiteral(@" chartArea: { width: '60%' },
            colors: ['#b0120a', '#7b1fa2', '#ffab91', '#d95f02'],
            hAxis: { minValueL: 0 },
            yAxis: {},
            backgroundColor: { fill: ""#f8f9fc""}
            
        };

        var chart = new google.charts.Line(document.getElementById('chartDiv'));
        chart.draw(data, google.charts.Line.convertOptions(options));
        return false;
    }

</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
