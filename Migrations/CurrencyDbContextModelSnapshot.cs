// <auto-generated />
using System;
using ExchangeRate.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExchangeRate.Migrations
{
    [DbContext(typeof(CurrencyDbContext))]
    partial class CurrencyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExchangeRate.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrencyId");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("ExchangeRate.Models.CurrencyMonthly", b =>
                {
                    b.Property<int>("CurrencyMonthlyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Currency")
                        .HasColumnType("int");

                    b.Property<string>("LastRefreshed")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CurrencyMonthlyId");

                    b.HasIndex("Currency");

                    b.ToTable("CurrencyMonthly");
                });

            modelBuilder.Entity("ExchangeRate.Models.Monthly", b =>
                {
                    b.Property<int>("MonthlyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Close")
                        .HasColumnType("real");

                    b.Property<float>("High")
                        .HasColumnType("real");

                    b.Property<float>("Low")
                        .HasColumnType("real");

                    b.Property<float>("Open")
                        .HasColumnType("real");

                    b.Property<int?>("ToCurrency")
                        .HasColumnType("int");

                    b.HasKey("MonthlyId");

                    b.HasIndex("ToCurrency");

                    b.ToTable("Monthly");
                });

            modelBuilder.Entity("ExchangeRate.Models.ToCurrency", b =>
                {
                    b.Property<int>("ToCurrencyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AskPrice")
                        .HasColumnType("real");

                    b.Property<float>("BidPrice")
                        .HasColumnType("real");

                    b.Property<float>("ExchangeRate")
                        .HasColumnType("real");

                    b.Property<string>("LastRefreshed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ToCurrency")
                        .HasColumnType("int");

                    b.Property<string>("ToCurrencyName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ToCurrencyId");

                    b.HasIndex("ToCurrency");

                    b.ToTable("ToCurrency");
                });

            modelBuilder.Entity("ExchangeRate.Models.CurrencyMonthly", b =>
                {
                    b.HasOne("ExchangeRate.Models.ToCurrency", null)
                        .WithMany("CurrencyMonthlies")
                        .HasForeignKey("Currency");
                });

            modelBuilder.Entity("ExchangeRate.Models.Monthly", b =>
                {
                    b.HasOne("ExchangeRate.Models.CurrencyMonthly", null)
                        .WithMany("Monthlies")
                        .HasForeignKey("ToCurrency");
                });

            modelBuilder.Entity("ExchangeRate.Models.ToCurrency", b =>
                {
                    b.HasOne("ExchangeRate.Models.Currency", null)
                        .WithMany("ToCurrencies")
                        .HasForeignKey("ToCurrency");
                });
#pragma warning restore 612, 618
        }
    }
}
